name: conditions tester

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest

    outputs: 
      runDev: ${{ steps.set_output.outputs.runDev }}
      runProd: ${{ steps.set_output.outputs.runProd }}
      devApprovalNeeded: ${{ steps.set_output.outputs.devApprovalNeeded }}

    steps:
      - name: Run tests
        run: echo "Running init"

      - name: set output
        id: set_output
        run: |
          echo "runDev=true" >> $GITHUB_OUTPUT
          echo "runProd=true" >> $GITHUB_OUTPUT
          echo "devApprovalNeeded=false" >> $GITHUB_OUTPUT
  
  deployDev:
    runs-on: ubuntu-latest
    name: Deploy to DEV
    environment: DEV
    needs: init

    if: needs.init.outputs.runDev == 'true'
    
    steps:
      - name: deploy dev
        run: echo "Deploying to DEV" >> $GITHUB_STEP_SUMMARY


      - name: print env
        run: |
          echo "github.job: ${{ github.job }}"
          
  
  # deployDevAutoApprove:
  #   runs-on: ubuntu-latest
  #   name: Deploy to DEV Auto Approve
  #   needs: init

  #   env:
  #     GH_TOKEN: ${{ secrets.GH_TOKEN_FOR_AUTO_APPROVING_DEPLOYS }}

  #   if: needs.init.outputs.runDev == 'true' && needs.init.outputs.devApprovalNeeded != 'true'

  #   steps:
  #     - run: echo "Deploy to DEV Auto Approved" >> $GITHUB_STEP_SUMMARY
      
  #     - name: Get Environment ID
  #       id: environment-id
  #       run: |
  #         envs=$(gh api repos/${{ github.repository }}/environments)

  #         environmentId=$(echo $envs | jq -r '.environments[] | select(.name=="DEV") | .id')
  #         echo "ENVID=$environmentId" >> $GITHUB_ENV
      
  #     # only approve if there are pending deployments in the current run
  #     - name: Get Pending Deployments
  #       id: pending-deployments
  #       run: |
  #         result=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments)

  #         pending=false
  #         if [[ "$result" != '[]' ]]; then
  #           pending=true
  #         fi

  #         echo "PENDING=$pending" >> $GITHUB_ENV
      
  #     - name: Approve Pending Deployment
  #       if: env.PENDING == 'true'
  #       run: |
  #         gh api -H "Accept: application/vnd.github+json" \
  #           -H "X-GitHub-Api-Version: 2022-11-28"         \
  #           --method POST                                 \
  #           -F "environment_ids[]=$ENVID"                 \
  #           -f "state=approved"                           \
  #           -f "comment=Auto-Approved by GitHub Actions"  \
  #           repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments
